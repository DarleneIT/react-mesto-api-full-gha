{"ast":null,"code":"import _classCallCheck from\"/Users/darlene/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/darlene/Desktop/dev/react-mesto-auth/node_modules/@babel/runtime/helpers/esm/createClass.js\";var Api=/*#__PURE__*/function(){function Api(options){_classCallCheck(this,Api);this._url=options.url;this._headers=options.headers;}_createClass(Api,[{key:\"_checkResponse\",value:function _checkResponse(res){if(res.ok){return res.json();}return Promise.reject(\"\\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 \".concat(res.status));}},{key:\"_request\",value:function _request(path,method,data){var body=data;if((method===\"PATCH\"||method===\"POST\")&&data){body=JSON.stringify(data);}return fetch(this._url+path,{method:method,headers:this._headers,body:body}).then(this._checkResponse);}},{key:\"getUserInfo\",value:function getUserInfo(){return this._request(\"users/me\",\"GET\");}},{key:\"getItems\",value:function getItems(){return this._request(\"cards\",\"GET\");}},{key:\"setUserInfo\",value:function setUserInfo(data){return this._request(\"users/me\",\"PATCH\",data);}},{key:\"setAvatar\",value:function setAvatar(data){return this._request(\"users/me/avatar\",\"PATCH\",data);}},{key:\"addCard\",value:function addCard(data){return this._request(\"cards\",\"POST\",data);}},{key:\"deleteCard\",value:function deleteCard(id){return this._request(\"cards/\".concat(id),\"DELETE\");}},{key:\"changeLikeCardStatus\",value:function changeLikeCardStatus(cardId,isLiked){if(isLiked){return this._request(\"cards/\".concat(cardId,\"/likes\"),\"PUT\");}else{return this._request(\"cards/\".concat(cardId,\"/likes\"),\"DELETE\");}}}]);return Api;}();export var api=new Api({url:\"https://mesto.nomoreparties.co/v1/cohort-66/\",headers:{authorization:\"c9ca397d-f5a3-459e-b811-61b33e0fdb3e\",\"Content-Type\":\"application/json\"}});","map":{"version":3,"names":["Api","options","_classCallCheck","_url","url","_headers","headers","_createClass","key","value","_checkResponse","res","ok","json","Promise","reject","concat","status","_request","path","method","data","body","JSON","stringify","fetch","then","getUserInfo","getItems","setUserInfo","setAvatar","addCard","deleteCard","id","changeLikeCardStatus","cardId","isLiked","api","authorization"],"sources":["/Users/darlene/Desktop/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  _request(path, method, data) {\n    let body = data;\n    if((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: this._headers,\n      body,\n    })\n    .then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return this._request(`users/me`, \"GET\");\n  }\n\n  getItems() {\n    return this._request(`cards`, \"GET\");\n  }\n\n  setUserInfo(data) {\n    return this._request(`users/me`, \"PATCH\", data);\n  }\n\n  setAvatar(data) {\n    return this._request(`users/me/avatar`, \"PATCH\", data);\n  }\n\n  addCard(data) {\n    return this._request(`cards`, \"POST\", data);\n  }\n\n  deleteCard(id) {\n    return this._request(`cards/${id}`, \"DELETE\");\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\");\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\");\n    }\n  }\n}\n\nexport const api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-66/\",\n  headers: {\n    authorization: \"c9ca397d-f5a3-459e-b811-61b33e0fdb3e\",\n    \"Content-Type\": \"application/json\",\n  },\n});"],"mappings":"mQAAM,CAAAA,GAAG,yBACP,SAAAA,IAAYC,OAAO,CAAE,CAAAC,eAAA,MAAAF,GAAA,EACnB,IAAI,CAACG,IAAI,CAAGF,OAAO,CAACG,GAAG,CACvB,IAAI,CAACC,QAAQ,CAAGJ,OAAO,CAACK,OAAO,CACjC,CAACC,YAAA,CAAAP,GAAA,GAAAQ,GAAA,kBAAAC,KAAA,CAED,SAAAC,eAAeC,GAAG,CAAE,CAClB,GAAIA,GAAG,CAACC,EAAE,CAAE,CACV,MAAO,CAAAD,GAAG,CAACE,IAAI,CAAC,CAAC,CACnB,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,yCAAAC,MAAA,CAAWL,GAAG,CAACM,MAAM,CAAE,CAAC,CAC/C,CAAC,GAAAT,GAAA,YAAAC,KAAA,CAED,SAAAS,SAASC,IAAI,CAAEC,MAAM,CAAEC,IAAI,CAAE,CAC3B,GAAI,CAAAC,IAAI,CAAGD,IAAI,CACf,GAAG,CAACD,MAAM,GAAK,OAAO,EAAIA,MAAM,GAAK,MAAM,GAAKC,IAAI,CAAE,CACpDC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC,CAC7B,CACA,MAAO,CAAAI,KAAK,CAAC,IAAI,CAACtB,IAAI,CAAGgB,IAAI,CAAE,CAC7BC,MAAM,CAANA,MAAM,CACNd,OAAO,CAAE,IAAI,CAACD,QAAQ,CACtBiB,IAAI,CAAJA,IACF,CAAC,CAAC,CACDI,IAAI,CAAC,IAAI,CAAChB,cAAc,CAAC,CAC5B,CAAC,GAAAF,GAAA,eAAAC,KAAA,CAED,SAAAkB,YAAA,CAAc,CACZ,MAAO,KAAI,CAACT,QAAQ,YAAa,KAAK,CAAC,CACzC,CAAC,GAAAV,GAAA,YAAAC,KAAA,CAED,SAAAmB,SAAA,CAAW,CACT,MAAO,KAAI,CAACV,QAAQ,SAAU,KAAK,CAAC,CACtC,CAAC,GAAAV,GAAA,eAAAC,KAAA,CAED,SAAAoB,YAAYR,IAAI,CAAE,CAChB,MAAO,KAAI,CAACH,QAAQ,YAAa,OAAO,CAAEG,IAAI,CAAC,CACjD,CAAC,GAAAb,GAAA,aAAAC,KAAA,CAED,SAAAqB,UAAUT,IAAI,CAAE,CACd,MAAO,KAAI,CAACH,QAAQ,mBAAoB,OAAO,CAAEG,IAAI,CAAC,CACxD,CAAC,GAAAb,GAAA,WAAAC,KAAA,CAED,SAAAsB,QAAQV,IAAI,CAAE,CACZ,MAAO,KAAI,CAACH,QAAQ,SAAU,MAAM,CAAEG,IAAI,CAAC,CAC7C,CAAC,GAAAb,GAAA,cAAAC,KAAA,CAED,SAAAuB,WAAWC,EAAE,CAAE,CACb,MAAO,KAAI,CAACf,QAAQ,UAAAF,MAAA,CAAUiB,EAAE,EAAI,QAAQ,CAAC,CAC/C,CAAC,GAAAzB,GAAA,wBAAAC,KAAA,CAED,SAAAyB,qBAAqBC,MAAM,CAAEC,OAAO,CAAE,CACpC,GAAIA,OAAO,CAAE,CACX,MAAO,KAAI,CAAClB,QAAQ,UAAAF,MAAA,CAAUmB,MAAM,WAAU,KAAK,CAAC,CACtD,CAAC,IAAM,CACL,MAAO,KAAI,CAACjB,QAAQ,UAAAF,MAAA,CAAUmB,MAAM,WAAU,QAAQ,CAAC,CACzD,CACF,CAAC,WAAAnC,GAAA,KAGH,MAAO,IAAM,CAAAqC,GAAG,CAAG,GAAI,CAAArC,GAAG,CAAC,CACzBI,GAAG,CAAE,8CAA8C,CACnDE,OAAO,CAAE,CACPgC,aAAa,CAAE,sCAAsC,CACrD,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}