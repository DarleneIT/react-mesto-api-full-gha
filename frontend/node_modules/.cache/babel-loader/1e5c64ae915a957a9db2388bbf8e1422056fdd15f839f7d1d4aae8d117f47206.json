{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    //this._headers = options.headers; больше не нужен\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(path, method, data, jwt) {\n    let body = data;\n    if ((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      // headers: this._headers,\n      body\n    }).then(this._checkResponse);\n  }\n  getUserInfo(jwt) {\n    return this._request(`users/me`, \"GET\");\n  }\n  getItems(jwt) {\n    return this._request(`cards`, \"GET\");\n  }\n  setUserInfo(data, jwt) {\n    return this._request(`users/me`, \"PATCH\", data);\n  }\n  setAvatar(data, jwt) {\n    return this._request(`users/me/avatar`, \"PATCH\", data);\n  }\n  addCard(data, jwt) {\n    return this._request(`cards`, \"POST\", data);\n  }\n  deleteCard(id, jwt) {\n    return this._request(`cards/${id}`, \"DELETE\", jwt);\n  }\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\", jwt);\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\", jwt);\n    }\n  }\n}\nexport const api = new Api({\n  url: \"http://localhost:3000/\"\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_checkResponse","res","ok","json","Promise","reject","status","_request","path","method","data","jwt","body","JSON","stringify","fetch","headers","Authorization","localStorage","getItem","then","getUserInfo","getItems","setUserInfo","setAvatar","addCard","deleteCard","id","changeLikeCardStatus","cardId","isLiked","api"],"sources":["/Users/darlene/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    //this._headers = options.headers; больше не нужен\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  _request(path, method, data, jwt) {\n    let body = data;\n    if((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`},\n      // headers: this._headers,\n      body,\n    })\n    .then(this._checkResponse);\n  }\n\n  getUserInfo(jwt) {\n    return this._request(`users/me`, \"GET\");\n  }\n\n  getItems(jwt) {\n    return this._request(`cards`, \"GET\");\n  }\n\n  setUserInfo(data, jwt) {\n    return this._request(`users/me`, \"PATCH\", data);\n  }\n\n  setAvatar(data, jwt) {\n    return this._request(`users/me/avatar`, \"PATCH\", data);\n  }\n\n  addCard(data, jwt) {\n    return this._request(`cards`, \"POST\", data);\n  }\n\n  deleteCard(id, jwt) {\n    return this._request(`cards/${id}`, \"DELETE\", jwt);\n  }\n\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\", jwt);\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\", jwt);\n    }\n  }\n}\n\nexport const api = new Api({\n  url: \"http://localhost:3000/\",\n});"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB;EACF;;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC/C;EAEAC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAEC,GAAG,EAAE;IAChC,IAAIC,IAAI,GAAGF,IAAI;IACf,IAAG,CAACD,MAAM,KAAK,OAAO,IAAIA,MAAM,KAAK,MAAM,KAAKC,IAAI,EAAE;MACpDE,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC;IAC7B;IACA,OAAOK,KAAK,CAAC,IAAI,CAACjB,IAAI,GAAGU,IAAI,EAAE;MAC7BC,MAAM;MACNO,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;MAAC,CAAC;MAClE;MACAP;IACF,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAI,CAACpB,cAAc,CAAC;EAC5B;EAEAqB,WAAWA,CAACV,GAAG,EAAE;IACf,OAAO,IAAI,CAACJ,QAAQ,CAAE,UAAS,EAAE,KAAK,CAAC;EACzC;EAEAe,QAAQA,CAACX,GAAG,EAAE;IACZ,OAAO,IAAI,CAACJ,QAAQ,CAAE,OAAM,EAAE,KAAK,CAAC;EACtC;EAEAgB,WAAWA,CAACb,IAAI,EAAEC,GAAG,EAAE;IACrB,OAAO,IAAI,CAACJ,QAAQ,CAAE,UAAS,EAAE,OAAO,EAAEG,IAAI,CAAC;EACjD;EAEAc,SAASA,CAACd,IAAI,EAAEC,GAAG,EAAE;IACnB,OAAO,IAAI,CAACJ,QAAQ,CAAE,iBAAgB,EAAE,OAAO,EAAEG,IAAI,CAAC;EACxD;EAEAe,OAAOA,CAACf,IAAI,EAAEC,GAAG,EAAE;IACjB,OAAO,IAAI,CAACJ,QAAQ,CAAE,OAAM,EAAE,MAAM,EAAEG,IAAI,CAAC;EAC7C;EAEAgB,UAAUA,CAACC,EAAE,EAAEhB,GAAG,EAAE;IAClB,OAAO,IAAI,CAACJ,QAAQ,CAAE,SAAQoB,EAAG,EAAC,EAAE,QAAQ,EAAEhB,GAAG,CAAC;EACpD;EAEAiB,oBAAoBA,CAACC,MAAM,EAAEC,OAAO,EAAEnB,GAAG,EAAE;IACzC,IAAImB,OAAO,EAAE;MACX,OAAO,IAAI,CAACvB,QAAQ,CAAE,SAAQsB,MAAO,QAAO,EAAE,KAAK,EAAElB,GAAG,CAAC;IAC3D,CAAC,MAAM;MACL,OAAO,IAAI,CAACJ,QAAQ,CAAE,SAAQsB,MAAO,QAAO,EAAE,QAAQ,EAAElB,GAAG,CAAC;IAC9D;EACF;AACF;AAEA,OAAO,MAAMoB,GAAG,GAAG,IAAIpC,GAAG,CAAC;EACzBI,GAAG,EAAE;AACP,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}