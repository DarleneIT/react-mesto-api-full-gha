{"ast":null,"code":"class Auth {\n  constructor(options) {\n    this._url = options.url;\n    //this._headers = options.headers;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(path, method, data) {\n    let body = data;\n    if ((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: this._headers,\n      headersAuthorization: `Bearer ${token}`,\n      body\n    }).then(this._checkResponse);\n  }\n  register(data) {\n    return this._request(`signup`, \"POST\", data);\n  }\n  login(data) {\n    return this._request(`signin`, \"POST\", data);\n  }\n  checkToken(token) {\n    return fetch(`${this._url}users/me`, {\n      method: \"GET\",\n      headers: {\n        ...this._headers,\n        Authorization: `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n}\nexport const auth = new Auth({\n  url: \"http://localhost:3000/\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Auth","constructor","options","_url","url","_checkResponse","res","ok","json","Promise","reject","status","_request","path","method","data","body","JSON","stringify","fetch","headers","_headers","headersAuthorization","token","then","register","login","checkToken","Authorization","auth"],"sources":["/Users/darlene/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/auth.js"],"sourcesContent":["class Auth {\n    constructor(options) {\n      this._url = options.url;\n      //this._headers = options.headers;\n    }\n  \n    _checkResponse(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка ${res.status}`);\n    }\n  \n    _request(path, method, data) {\n      let body = data;\n      if ((method === \"PATCH\" || method === \"POST\") && data) {\n        body = JSON.stringify(data);\n      }\n      return fetch(this._url + path, {\n        method,\n        headers: this._headers,  \n        headersAuthorization: `Bearer ${token}`,\n        body,\n      })\n      .then(this._checkResponse);\n    }\n  \n    register(data) {\n      return this._request(`signup`, \"POST\", data);\n    }\n  \n    login(data) {\n      return this._request(`signin`, \"POST\", data);\n    }\n  \n    checkToken(token) {\n      return fetch(`${this._url}users/me`, {\n        method: \"GET\",\n        headers: {\n          ...this._headers,\n          Authorization: `Bearer ${token}`,\n        },\n      }).then(this._checkResponse);\n    }\n  }\n  \n  export const auth = new Auth({\n    url: \"http://localhost:3000/\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB;EACF;;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC/C;EAEAC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,IAAIC,IAAI,GAAGD,IAAI;IACf,IAAI,CAACD,MAAM,KAAK,OAAO,IAAIA,MAAM,KAAK,MAAM,KAAKC,IAAI,EAAE;MACrDC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC7B;IACA,OAAOI,KAAK,CAAC,IAAI,CAAChB,IAAI,GAAGU,IAAI,EAAE;MAC7BC,MAAM;MACNM,OAAO,EAAE,IAAI,CAACC,QAAQ;MACtBC,oBAAoB,EAAG,UAASC,KAAM,EAAC;MACvCP;IACF,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAI,CAACnB,cAAc,CAAC;EAC5B;EAEAoB,QAAQA,CAACV,IAAI,EAAE;IACb,OAAO,IAAI,CAACH,QAAQ,CAAE,QAAO,EAAE,MAAM,EAAEG,IAAI,CAAC;EAC9C;EAEAW,KAAKA,CAACX,IAAI,EAAE;IACV,OAAO,IAAI,CAACH,QAAQ,CAAE,QAAO,EAAE,MAAM,EAAEG,IAAI,CAAC;EAC9C;EAEAY,UAAUA,CAACJ,KAAK,EAAE;IAChB,OAAOJ,KAAK,CAAE,GAAE,IAAI,CAAChB,IAAK,UAAS,EAAE;MACnCW,MAAM,EAAE,KAAK;MACbM,OAAO,EAAE;QACP,GAAG,IAAI,CAACC,QAAQ;QAChBO,aAAa,EAAG,UAASL,KAAM;MACjC;IACF,CAAC,CAAC,CAACC,IAAI,CAAC,IAAI,CAACnB,cAAc,CAAC;EAC9B;AACF;AAEA,OAAO,MAAMwB,IAAI,GAAG,IAAI7B,IAAI,CAAC;EAC3BI,GAAG,EAAE,wBAAwB;EAC7BgB,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}