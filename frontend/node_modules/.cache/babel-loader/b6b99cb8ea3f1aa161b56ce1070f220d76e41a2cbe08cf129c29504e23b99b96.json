{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  getItems() {\n    return fetch(`${this._url}cards`, {\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  setUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n  setAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    }).then(this._checkResponse);\n  }\n  addCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization\n      }\n    }).then(this._checkResponse);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this._authorization\n        }\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._url}cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._authorization\n        }\n      }).then(this._checkResponse);\n    }\n  }\n}\nexport const api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-66/\",\n  headers: {\n    authorization: \"c9ca397d-f5a3-459e-b811-61b33e0fdb3e\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_headers","headers","_authorization","authorization","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","fetch","then","getItems","setUserInfo","data","method","body","JSON","stringify","name","about","setAvatar","avatar","addCard","link","deleteCard","cardId","changeLikeCardStatus","isLiked","api"],"sources":["/Users/darlene/Desktop/dev/react-mesto-auth/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._authorization = options.headers.authorization;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  getItems() {\n    return fetch(`${this._url}cards`, {\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  setUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  setAvatar(data) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  addCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link,\n      }),\n    }).then(this._checkResponse);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._authorization,\n      },\n    }).then(this._checkResponse);\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return fetch(`${this._url}cards/${cardId}/likes`, {\n        method: \"PUT\",\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then(this._checkResponse);\n    } else {\n      return fetch(`${this._url}cards/${cardId}/likes`, {\n        method: \"DELETE\",\n        headers: {\n          authorization: this._authorization,\n        },\n      }).then(this._checkResponse);\n    }\n  }\n}\n\nexport const api = new Api({\n  url: \"https://mesto.nomoreparties.co/v1/cohort-66/\",\n  headers: {\n    authorization: \"c9ca397d-f5a3-459e-b811-61b33e0fdb3e\",\n    \"Content-Type\": \"application/json\",\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}