{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json());\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  async setUserInfo(data) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    });\n    return this._checkResponse(response);\n  }\n  async getItems() {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._checkResponse(response);\n  }\n  async setAvatar(data) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        avatar: data.avatar\n      })\n    });\n    return this._checkResponse(response);\n  }\n  async addCard(data) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify(data)\n    });\n    return this._checkResponse(response);\n  }\n  async deleteCard(id) {\n    const response = await fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    });\n    return this._checkResponse(response);\n  }\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\");\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\");\n    }\n  }\n}\nexport const api = new Api({\n  url: \"http://localhost:3000\"\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_checkResponse","res","ok","Promise","resolve","json","reject","status","setUserInfo","data","response","fetch","method","headers","authorization","localStorage","getItem","body","JSON","stringify","name","about","getItems","setAvatar","avatar","addCard","deleteCard","id","changeLikeCardStatus","cardId","isLiked","_request","api"],"sources":["/Users/darlene/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return Promise.resolve(res.json())\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  async setUserInfo(data) {\n    const response = await fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about,\n      }),\n    })\n    return this._checkResponse(response)\n  }\n\n  async getItems() {\n    const response = await fetch(`${this._url}/cards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._checkResponse(response)\n  }\n\n  async setAvatar(data) {\n    const response = await fetch(`${this._url}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify({\n        avatar: data.avatar,\n      }),\n    })\n    return this._checkResponse(response)\n  }\n\n  async addCard(data) {\n    const response = await fetch(`${this._url}/cards`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n      body: JSON.stringify(data),\n    })\n    return this._checkResponse(response)\n  }\n\n  async deleteCard(id) {\n    const response = await fetch(`${this._url}/cards/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n      },\n    })\n    return this._checkResponse(response)\n  }\n\n  changeLikeCardStatus(cardId, isLiked) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\");\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\");\n    }\n  }\n}\n\n\nexport const api = new Api({\n  url: \"http://localhost:3000\",\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}