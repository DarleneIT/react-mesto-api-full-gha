{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._url = options.url;\n    //this._headers = options.headers; больше не нужен\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n  _request(path, method, data) {\n    let body = data;\n    if ((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      // headers: this._headers,\n      body\n    }).then(this._checkResponse);\n  }\n  getUserInfo() {\n    return this._request(`users/me`, \"GET\");\n  }\n  getItems() {\n    return this._request(`cards`, \"GET\");\n  }\n  setUserInfo(data) {\n    return this._request(`users/me`, \"PATCH\", data);\n  }\n  setAvatar(data) {\n    return this._request(`users/me/avatar`, \"PATCH\", data);\n  }\n  addCard(data) {\n    return this._request(`cards`, \"POST\", data);\n  }\n  deleteCard(id, jwt) {\n    return this._request(`cards/${id}`, \"DELETE\");\n  }\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\", jwt);\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\", jwt);\n    }\n  }\n}\nexport const api = new Api({\n  url: \"http://localhost:3000/\"\n});","map":{"version":3,"names":["Api","constructor","options","_url","url","_checkResponse","res","ok","json","Promise","reject","status","_request","path","method","data","body","JSON","stringify","fetch","headers","Authorization","localStorage","getItem","then","getUserInfo","getItems","setUserInfo","setAvatar","addCard","deleteCard","id","jwt","changeLikeCardStatus","cardId","isLiked","api"],"sources":["/Users/darlene/Desktop/dev/react-mesto-api-full-gha/frontend/src/utils/api.js"],"sourcesContent":["class Api {\n  constructor(options) {\n    this._url = options.url;\n    //this._headers = options.headers; больше не нужен\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка ${res.status}`);\n  }\n\n  _request(path, method, data) {\n    let body = data;\n    if((method === \"PATCH\" || method === \"POST\") && data) {\n      body = JSON.stringify(data);\n    }\n    return fetch(this._url + path, {\n      method,\n      headers: { Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`},\n      // headers: this._headers,\n      body,\n    })\n    .then(this._checkResponse);\n  }\n\n  getUserInfo() {\n    return this._request(`users/me`, \"GET\");\n  }\n\n  getItems() {\n    return this._request(`cards`, \"GET\");\n  }\n\n  setUserInfo(data) {\n    return this._request(`users/me`, \"PATCH\", data);\n  }\n\n  setAvatar(data) {\n    return this._request(`users/me/avatar`, \"PATCH\", data);\n  }\n\n  addCard(data) {\n    return this._request(`cards`, \"POST\", data);\n  }\n\n  deleteCard(id, jwt) {\n    return this._request(`cards/${id}`, \"DELETE\");\n  }\n\n  changeLikeCardStatus(cardId, isLiked, jwt) {\n    if (isLiked) {\n      return this._request(`cards/${cardId}/likes`, \"PUT\", jwt);\n    } else {\n      return this._request(`cards/${cardId}/likes`, \"DELETE\", jwt);\n    }\n  }\n}\n\nexport const api = new Api({\n  url: \"http://localhost:3000/\",\n});"],"mappings":"AAAA,MAAMA,GAAG,CAAC;EACRC,WAAWA,CAACC,OAAO,EAAE;IACnB,IAAI,CAACC,IAAI,GAAGD,OAAO,CAACE,GAAG;IACvB;EACF;;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAClB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,UAASJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAC/C;EAEAC,QAAQA,CAACC,IAAI,EAAEC,MAAM,EAAEC,IAAI,EAAE;IAC3B,IAAIC,IAAI,GAAGD,IAAI;IACf,IAAG,CAACD,MAAM,KAAK,OAAO,IAAIA,MAAM,KAAK,MAAM,KAAKC,IAAI,EAAE;MACpDC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAC7B;IACA,OAAOI,KAAK,CAAC,IAAI,CAAChB,IAAI,GAAGU,IAAI,EAAE;MAC7BC,MAAM;MACNM,OAAO,EAAE;QAAEC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAE;MAAC,CAAC;MAClE;MACAP;IACF,CAAC,CAAC,CACDQ,IAAI,CAAC,IAAI,CAACnB,cAAc,CAAC;EAC5B;EAEAoB,WAAWA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACb,QAAQ,CAAE,UAAS,EAAE,KAAK,CAAC;EACzC;EAEAc,QAAQA,CAAA,EAAG;IACT,OAAO,IAAI,CAACd,QAAQ,CAAE,OAAM,EAAE,KAAK,CAAC;EACtC;EAEAe,WAAWA,CAACZ,IAAI,EAAE;IAChB,OAAO,IAAI,CAACH,QAAQ,CAAE,UAAS,EAAE,OAAO,EAAEG,IAAI,CAAC;EACjD;EAEAa,SAASA,CAACb,IAAI,EAAE;IACd,OAAO,IAAI,CAACH,QAAQ,CAAE,iBAAgB,EAAE,OAAO,EAAEG,IAAI,CAAC;EACxD;EAEAc,OAAOA,CAACd,IAAI,EAAE;IACZ,OAAO,IAAI,CAACH,QAAQ,CAAE,OAAM,EAAE,MAAM,EAAEG,IAAI,CAAC;EAC7C;EAEAe,UAAUA,CAACC,EAAE,EAAEC,GAAG,EAAE;IAClB,OAAO,IAAI,CAACpB,QAAQ,CAAE,SAAQmB,EAAG,EAAC,EAAE,QAAQ,CAAC;EAC/C;EAEAE,oBAAoBA,CAACC,MAAM,EAAEC,OAAO,EAAEH,GAAG,EAAE;IACzC,IAAIG,OAAO,EAAE;MACX,OAAO,IAAI,CAACvB,QAAQ,CAAE,SAAQsB,MAAO,QAAO,EAAE,KAAK,EAAEF,GAAG,CAAC;IAC3D,CAAC,MAAM;MACL,OAAO,IAAI,CAACpB,QAAQ,CAAE,SAAQsB,MAAO,QAAO,EAAE,QAAQ,EAAEF,GAAG,CAAC;IAC9D;EACF;AACF;AAEA,OAAO,MAAMI,GAAG,GAAG,IAAIpC,GAAG,CAAC;EACzBI,GAAG,EAAE;AACP,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}